{"version":3,"sources":["logo.svg","InputField.js","SubmitButton.js","stores/UserStore.js","ForgotPassword.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["InputField","className","type","this","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","extendObservable","loading","isLoggedIn","username","ForgotPassword","href","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","App","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a425f33.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nimport React from 'react';\r\n\r\nclass InputField extends React.Component{\r\n  render(){\r\n    return (\r\n      <div className=\"inputField\">\r\n        <input className='input'\r\n        type={this.props.type}\r\n        placeholder={this.props.placeholder}\r\n        value={this.props.value}\r\n        onChange={ (e) => this.props.onChange(e.target.value)}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","\r\nimport React from 'react';\r\n\r\nclass SubmitButton extends React.Component{\r\n  render(){\r\n    return (\r\n      <div className=\"submitButton\">\r\n        <button\r\n         className='btn'\r\n         disabled={this.props.disabled}\r\n         onClick={() => this.props.onClick()}\r\n         >\r\n           {this.props.text}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import {extendObservable} from 'mobx';\r\n\r\nclass UserStore{\r\n    constructor(){\r\n        extendObservable(this, {\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: ''\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserStore;","\r\nimport React from 'react';\r\n\r\nclass ForgotPassword extends React.Component{\r\n  render(){\r\n    return (\r\n      <div className = \"forgotpassword\">\r\n        <p className =\"forgotPassword \">\r\n            <a href=\"./test.html\">Forgot Password?</a>\r\n        </p>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;\r\n","\r\nimport React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from './stores/UserStore';\r\nimport ForgotPassword from './ForgotPassword';\r\n\r\nclass LoginForm extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false\r\n    }\r\n  }\r\n\r\n  setInputValue(property, val){\r\n    val = val.trim();\r\n    if(val.length > 12){\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]: val\r\n    })\r\n  }\r\n\r\n  resetForm() {\r\n    this.setState({\r\n      username:'',\r\n      password: '',\r\n      buttonDisabled: false\r\n    })\r\n  }\r\n\r\n  async doLogin(){\r\n    if(!this.state.username){\r\n      return;\r\n    }\r\n    if(!this.state.password){\r\n      return;\r\n    }\r\n    this.setState({\r\n      buttonDisabled :true\r\n    })\r\n\r\n    try{\r\n      let res = await fetch('/login', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept':'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password\r\n        })\r\n      });\r\n      let result = await res.json();\r\n      if (result && result.success){\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username= result.username;\r\n      }\r\n\r\n      else if(result && result.success === false)\r\n      {\r\n        this.resetForm();\r\n        alert(result.msg);\r\n      }\r\n    }\r\n\r\n    catch(e) {\r\n      console.log(e);\r\n      this.resetForm();\r\n    }\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"loginForm\">\r\n        <p>Log in</p>\r\n        <InputField\r\n        type = 'text'\r\n        placeholder= 'UserName'\r\n        value={this.state.username ? this.state.username : ''}\r\n        onChange={(val) => this.setInputValue('username',val)}\r\n      ></InputField>\r\n\r\n<InputField\r\n        type = 'password'\r\n        placeholder= 'Password'\r\n        value={this.state.password ? this.state.password : ''}\r\n        onChange={(val) => this.setInputValue('password',val)}\r\n      ></InputField>\r\n\r\n    <SubmitButton\r\n    text = 'Login'\r\n    disabled = {this.props.buttonDisabled}\r\n    onClick = {() => this.doLogin()}></SubmitButton>\r\n    <ForgotPassword></ForgotPassword>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport LoginForm from'./LoginForm';\nimport SubmitButton from './SubmitButton';\nimport UserStore from './stores/UserStore';\nimport {observer} from 'mobx-react';\n\nclass App extends React.Component{\n\n  async componentDidMount(){\n    try{\n\n      let res = await fetch('/isLoggedIn',{\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n      if (result && result.success){\n        UserStore.loading = false;\n        UserStore.username = result.username;\n      }\n      else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;      }\n    }\n    catch(e){\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n\n    }\n  }\n  async doLogout(){\n    try{\n\n      let res = await fetch('./logout',{\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n      if (result && result.success){\n        UserStore.isLoggedIn = false;\n        UserStore.username = '';\n      }\n    }\n      \n    catch(e){\n     console.log(e)\n     \n\n    }\n  }\n\n  render(){\n    if (UserStore.loading) {\n      return(\n        <div className=\"app\">\n          <div className = \"container\">\n            Loading, please wait..\n          </div>\n        </div>\n      );\n      \n    }\n    else {\n      if(UserStore.isLoggedIn)\n      {\n        return(\n          <div className=\"app\">\n            <div className = \"container\">\n              Welcome {UserStore.username}\n\n              <SubmitButton\n              text= {'Log Out'}\n              disabled = {false}\n              onClick={ () => this.doLogout()}/>\n            </div>\n          </div>\n        );\n      }\n    }\n    return (\n      <div className=\"app\">\n        <div className='container'>\n          <LoginForm/>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}